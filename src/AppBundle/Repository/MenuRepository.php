<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Season;
use AppBundle\Form\Model\Search;

/**
 * menuRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MenuRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return array
     */
    public function getListMenus()
    {
        $qb = $this->createQueryBuilder('m')
            ->select('m')
            ->orderBy('m.name')
            ->getQuery()
            ->getResult();

        return $qb;
    }

    /**
     * @param $id
     * @return mixed
     */
    public function getMenuById($id)
    {
        $q = $this->createQueryBuilder('m')
            ->andWhere('m.id = :id')
            ->setParameter('id', $id)
            ->getQuery()
            ->getOneOrNullResult();

        return $q;
    }

    /**
     * @param int $limit
     * @param Season|null $season
     * @return array
     */
    public function getRandomMenus($limit = 5, Season $season = null)
    {
        $qb = $this->createQueryBuilder('m')
            ->addSelect('RAND() as HIDDEN rand')
            ->addOrderBy('rand');

        if (null !== $season) {
            $qb->leftJoin('m.season', 's')
                ->where('s.id = :idSeason')
                ->setParameter(':idSeason', $season->getId());
        }

        $qb->setMaxResults($limit);

        return $qb->getQuery()->getResult();
    }

    /**
     * @param Search $search
     * @return array
     */
    public function getSearchMenu(Search $search)
    {
        $qb = $this->createQueryBuilder('m')
            ->select('m, r')
            ->innerJoin('m.recipes', 'r')
            ->andWhere('r.age = :age')
            ->addSelect('r')
            ->setParameter(':age', $search->getAge())
        ;

        return $qb
            ->getQuery()
            ->getResult();
    }
}
