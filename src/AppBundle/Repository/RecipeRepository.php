<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Season;
use AppBundle\Form\Model\Search;
use Doctrine\ORM\QueryBuilder;

/**
 * RecipeRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecipeRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $id
     * @return mixed
     */
    public function getRecipe($id)
    {
        return $this->createQueryBuilder('r')
            ->select('r')
            ->andWhere('r.id = :id')
            ->setParameter('id', $id)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param int $limit
     * @param Season|null $season
     * @return array
     */
    public function getRandomRecipes($limit = 5, Season $season = null)
    {
        $qb = $this->createQueryBuilder('r')
            ->addSelect('RAND() as HIDDEN rand')
            ->addOrderBy('rand');

        if (null !== $season) {
            $qb->leftJoin('r.season', 's')
                ->where('s.id = :idSeason')
                ->setParameter(':idSeason', $season->getId());
        }

        $qb->setMaxResults($limit);

        return $qb->getQuery()->getResult();
    }

    /**
     * @param int $count
     * @return mixed
     */
    public function getRandomRecipe($count = 1)
    {
        return $this->createQueryBuilder('r')
            ->addSelect('RAND() as HIDDEN rand')
            ->addOrderBy('rand')
            ->setMaxResults($count)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param $search
     * @return array
     */
    public function getSearchRecipe(Search $search)
    {
        $qb = $this->createQueryBuilder('r')
            ->select('r')
            ->andWhere('r.age = :age')
            ->setParameter(':age', $search->getAge())
            ->setMaxResults(5)
        ;

        return $qb
            ->getQuery()
            ->getResult();
    }

    /**
     * @param QueryBuilder $qb
     * @param $age
     */
    public function whereAgeIsDefined(QueryBuilder $qb, $age)
    {
        $qb
            ->andWhere('r.age <= :age')
            ->setParameter(':age', $age);
    }
}
